// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SQRBackend.Data;

#nullable disable

namespace SQRBackend.Migrations
{
    [DbContext(typeof(SQRDbContext))]
    partial class SQRDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("SQRBackend.Models.Material", b =>
                {
                    b.Property<string>("MaterialCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("MaterialCode");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            MaterialCode = "aaa",
                            MaterialDescription = "desc1"
                        },
                        new
                        {
                            MaterialCode = "bbb",
                            MaterialDescription = "desc2"
                        },
                        new
                        {
                            MaterialCode = "ccc",
                            MaterialDescription = "desc3"
                        });
                });

            modelBuilder.Entity("SQRBackend.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductCode");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = "111",
                            ProductCode = "abc",
                            Quantity = 100.00m
                        },
                        new
                        {
                            OrderId = "222",
                            ProductCode = "def",
                            Quantity = 200.00m
                        });
                });

            modelBuilder.Entity("SQRBackend.Models.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CycleTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductCode");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductCode = "abc",
                            CycleTime = 30.3m,
                            Image = "0x000001",
                            ProductDescription = "xxx"
                        },
                        new
                        {
                            ProductCode = "def",
                            CycleTime = 45.5m,
                            Image = "0x00000",
                            ProductDescription = "yyy"
                        });
                });

            modelBuilder.Entity("SQRBackend.Models.ProductMaterial", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductCode", "MaterialCode");

                    b.HasIndex("MaterialCode");

                    b.ToTable("ProductMaterials");

                    b.HasData(
                        new
                        {
                            ProductCode = "abc",
                            MaterialCode = "aaa"
                        },
                        new
                        {
                            ProductCode = "abc",
                            MaterialCode = "bbb"
                        },
                        new
                        {
                            ProductCode = "def",
                            MaterialCode = "ccc"
                        },
                        new
                        {
                            ProductCode = "def",
                            MaterialCode = "bbb"
                        });
                });

            modelBuilder.Entity("SQRBackend.Models.Production", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CycleTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "Email", "OrderId", "Date");

                    b.HasIndex("Email");

                    b.HasIndex("OrderId");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("SQRBackend.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Email = "teste@sqr.com.br",
                            EndDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InitialDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test User"
                        });
                });

            modelBuilder.Entity("SQRBackend.Models.Order", b =>
                {
                    b.HasOne("SQRBackend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductCode");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SQRBackend.Models.ProductMaterial", b =>
                {
                    b.HasOne("SQRBackend.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SQRBackend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SQRBackend.Models.Production", b =>
                {
                    b.HasOne("SQRBackend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SQRBackend.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
